webpackHotUpdate(2,{

/***/ "./src/main/webapp/app/entities/dashboard/dashboard.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\r\nvar ng_jhipster_1 = __webpack_require__(\"./node_modules/ng-jhipster/index.js\");\r\nvar user_service_1 = __webpack_require__(\"./src/main/webapp/app/shared/user/user.service.ts\");\r\nvar principal_service_1 = __webpack_require__(\"./src/main/webapp/app/shared/auth/principal.service.ts\");\r\nvar CanvasJS = __webpack_require__(\"./src/main/webapp/content/js/canvasjs.min.js\");\r\nvar DashboardComponent = /** @class */ (function () {\r\n    function DashboardComponent(jhiAlertService, userService, principal) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.userService = userService;\r\n        this.principal = principal;\r\n        this.pieColors = [\r\n            {\r\n                backgroundColor: ['#613b18', '#b87524', '#fb9e37']\r\n            }\r\n        ];\r\n        this.lineChartType = 'line';\r\n        this.lineChartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n        this.barChartOptionsEmprestimo = {\r\n            scaleShowVerticalLines: false,\r\n            responsive: true\r\n        };\r\n        this.donutColors = [\r\n            {\r\n                backgroundColor: ['#613b18', '#b87524', '#fb9e37']\r\n            }\r\n        ];\r\n        this.pieChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\r\n        this.pieChartData = [300, 500, 100];\r\n        this.pieChartType = 'pie';\r\n        this.doughnutChartLabels = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\r\n        this.doughnutChartData = [350, 450, 100];\r\n        this.doughnutChartType = 'doughnut';\r\n        this.barChartLabelsReserva = ['JAN', 'FEV', 'MAR', 'ABR'];\r\n        this.barChartTypeReserva = 'bar';\r\n        this.barChartLegendReserva = true;\r\n        this.barChartDataReseva = [\r\n            { data: [28, 48, 40, 55], label: 'Reservas' }\r\n        ];\r\n        this.barChartLabelsEmprestimo = ['JAN', 'FEV', 'MAR', 'ABR'];\r\n        this.barChartTypeEmprestimo = 'bar';\r\n        this.barChartLegendEmprestimo = true;\r\n        this.barChartDataEmprestimo = [\r\n            { data: [65, 59, 80, 100], label: 'Empréstimos' }\r\n        ];\r\n        this.barColorsEmprestimo = [\r\n            {\r\n                backgroundColor: ['#967138', '#967138', '#967138', '#967138']\r\n            }\r\n        ];\r\n        this.barChartOptionsReserva = {\r\n            scaleShowVerticalLines: false,\r\n            responsive: true\r\n        };\r\n        this.barColorsReserva = [\r\n            {\r\n                backgroundColor: ['#978138', '#978138', '#978138', '#978138']\r\n            }\r\n        ];\r\n        this.barColorsLine = [\r\n            {\r\n                backgroundColor: ['#1C502F', '#007bff']\r\n            }\r\n        ];\r\n        this.lineChartData = [\r\n            [65, 59, 80, 81, 56, 55, 40],\r\n            [28, 48, 40, 19, 86, 27, 90]\r\n        ];\r\n    }\r\n    DashboardComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.principal.identity().then(function (userIdentity) {\r\n            _this.user = userIdentity;\r\n            if (_this.user.authorities[0] === 'ROLE_ADMIN') {\r\n                _this.userService.queryUserDashboard().subscribe(function (res) {\r\n                    _this.usersAdmin = res.body;\r\n                }, function (res) { return _this.onError(res.message); });\r\n                // this.emprestimoService.queryEmprestimoDashboard().subscribe(\r\n                //     (res: HttpResponse<number>) => {\r\n                //         this.emprestimosAdmin = res.body;\r\n                //     }, (res: HttpErrorResponse) => this.onError(res.message)\r\n                // );\r\n                // this.reservaService.queryReservaDashboard().subscribe(\r\n                //     (res: HttpResponse<number>) => {\r\n                //         this.reservasAdmin = res.body;\r\n                //     }, (res: HttpErrorResponse) => this.onError(res.message)\r\n                // );\r\n            }\r\n            else {\r\n                // this.emprestimoService.queryEmprestimoUser(this.user.id).subscribe(\r\n                //     (res: HttpResponse<number>) => {\r\n                //         this.emprestimosUser = res.body;\r\n                //     }, (res: HttpErrorResponse) => this.onError(res.message)\r\n                // );\r\n                // this.reservaService.queryReservaUser(this.user.id).subscribe(\r\n                //     (res: HttpResponse<number>) => {\r\n                //         this.reservasUser = res.body;\r\n                //     }, (res: HttpErrorResponse) => this.onError(res.message)\r\n                // );\r\n                // this.emprestimoService.queryDevolucaoUser(this.user.id).subscribe(\r\n                //     (res: HttpResponse<number>) => {\r\n                //         this.devolucoesUser = res.body;\r\n                //     }, (res: HttpErrorResponse) => this.onError(res.message)\r\n                // );\r\n            }\r\n            // this.obraService.queryObraDashboard().subscribe(\r\n            //     (res: HttpResponse<number>) => {\r\n            //         this.obrasAdmin = res.body;\r\n            //     }, (res: HttpErrorResponse) => this.onError(res.message)\r\n            // );\r\n        });\r\n        this.carregarChart();\r\n        this.carregarBarChar();\r\n    };\r\n    DashboardComponent.prototype.onError = function (error) {\r\n        this.jhiAlertService.error(error.message, null, null);\r\n    };\r\n    /*--------Canvas Gráficos-------*/\r\n    DashboardComponent.prototype.carregarChart = function () {\r\n        var chart = new CanvasJS.Chart('chartContainer', {\r\n            theme: 'light2',\r\n            animationEnabled: true,\r\n            exportEnabled: true,\r\n            title: {\r\n                text: 'Empréstimos'\r\n            },\r\n            data: [{\r\n                    type: 'pie',\r\n                    showInLegend: true,\r\n                    toolTipContent: '<b>{name}</b>: ${y} (#percent%)',\r\n                    indexLabel: '{name} - #percent%',\r\n                    dataPoints: [\r\n                        { y: 450, name: 'Food' },\r\n                        { y: 120, name: 'Insurance' },\r\n                        { y: 300, name: 'Traveling' },\r\n                    ]\r\n                }]\r\n        });\r\n        chart.render();\r\n    };\r\n    DashboardComponent.prototype.carregarBarChar = function () {\r\n        var chart = new CanvasJS.Chart('chartContainer2', {\r\n            animationEnabled: true,\r\n            exportEnabled: true,\r\n            title: {\r\n                text: 'Empréstimos'\r\n            },\r\n            data: [{\r\n                    type: 'column',\r\n                    dataPoints: [\r\n                        { y: 71, label: '2016' },\r\n                        { y: 55, label: '2017' },\r\n                        { y: 50, label: '2018' },\r\n                        { y: 65, label: '2019' },\r\n                    ]\r\n                }]\r\n        });\r\n        chart.render();\r\n    };\r\n    /*------------------------------*/\r\n    /*-----------------------------------------BarChart-Emprestimo-------------------------------------*/\r\n    DashboardComponent.prototype.chartClickedEmprestimo = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.chartHoveredEmprestimo = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.randomizeEmprestimo = function () {\r\n        // Only Change 3 values\r\n        var data = [\r\n            Math.round(Math.random() * 100),\r\n            59,\r\n            80,\r\n            (Math.random() * 100),\r\n            56,\r\n            (Math.random() * 100),\r\n            40\r\n        ];\r\n        var clone = JSON.parse(JSON.stringify(this.barChartDataEmprestimo));\r\n        clone[0].data = data;\r\n        this.barChartDataEmprestimo = clone;\r\n        /**\r\n         * (My guess), for Angular to recognize the change in the dataset\r\n         * it has to change the dataset variable directly,\r\n         * so one way around it, is to clone the data, change it and then\r\n         * assign it;\r\n         */\r\n    };\r\n    /*----------------------------------------------------------------------------------------*/\r\n    /*-----------------------------------------BarChart-Reserva-------------------------------------*/\r\n    DashboardComponent.prototype.chartClickedReserva = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.chartHoveredReserva = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.randomizeReserva = function () {\r\n        // Only Change 3 values\r\n        var data = [\r\n            Math.round(Math.random() * 100),\r\n            59,\r\n            80,\r\n            (Math.random() * 100),\r\n            56,\r\n            (Math.random() * 100),\r\n            40\r\n        ];\r\n        var clone = JSON.parse(JSON.stringify(this.barChartDataReseva));\r\n        clone[0].data = data;\r\n        this.barChartDataReseva = clone;\r\n        /**\r\n         * (My guess), for Angular to recognize the change in the dataset\r\n         * it has to change the dataset variable directly,\r\n         * so one way around it, is to clone the data, change it and then\r\n         * assign it;\r\n         */\r\n    };\r\n    /*----------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------Donut--------------------------------------------*/\r\n    DashboardComponent.prototype.chartClickedDonut = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.chartHoveredDonut = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.chartClickedPieChart = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.chartHoveredPieChart = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.chartClickedLineChart = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent.prototype.chartHoveredLineChart = function (e) {\r\n        console.log(e);\r\n    };\r\n    DashboardComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-dashboard',\r\n            template: __webpack_require__(\"./src/main/webapp/app/entities/dashboard/dashboard.component.html\"),\r\n            styles: [\r\n                __webpack_require__(\"./src/main/webapp/app/entities/dashboard/dashboard.css\")\r\n            ]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ng_jhipster_1.JhiAlertService,\r\n            user_service_1.UserService,\r\n            principal_service_1.Principal])\r\n    ], DashboardComponent);\r\n    return DashboardComponent;\r\n}());\r\nexports.DashboardComponent = DashboardComponent;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/webapp/app/entities/dashboard/dashboard.component.ts\n");

/***/ })

})